ext {
    debugPort = project.hasProperty('debugPort') ?  project.hasProperty('debugPort') : '8000'
	suspendDebug = project.hasProperty('suspendDebug') ?  'y' : 'n'
	
	turbociDistributionPath = project(':turboci-distribution').installationPath  
}

configurations {

	agentRuntime {
        transitive false
    }

}

dependencies {
	agentRuntime project(':turboci-agent')
}

task runSample_SimpleCommandLineApplication(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ["-javaagent:$configurations.agentRuntime.singleFile", 
               "-Xdebug",
               "-Xrunjdwp:server=y,transport=dt_socket,address=$debugPort,suspend=$suspendDebug"]
    main = 'turboci.samples.simple.commandline.SimpleCommandLineApplication'
    
}




task runSample(type: JavaExec) {
	dependsOn jar
	dependsOn ':turboci-distribution:installDist'
		
	classpath = sourceSets.main.runtimeClasspath
	
    jvmArgs = ["-javaagent:$turbociDistributionPath/lib/turboci-jvmgent.jar", 
               "-Xdebug",
               "-Xrunjdwp:server=y,transport=dt_socket,address=$debugPort,suspend=$suspendDebug"]
    main = 'turboci.samples.simple.commandline.SimpleCommandLineApplication'
}